{{ if eq .Values.config.cronjob.enabled true }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "app.name" . }}
  labels:
    app: {{ include "app.name" . }}
spec:
  schedule: {{ .Values.cronjob.schedule | quote }}
  failedJobsHistoryLimit: 0
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        metadata:
          labels:
            app: {{ include "app.name" . }}
          annotations:
            checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        spec:
          {{- if .Values.cronjob.affinity }}
          affinity:
{{ toYaml .Values.cronjob.affinity | indent 12 }}      
          {{- end }}          
          {{- if .Values.cronjob.tolerations }}          
          tolerations:
{{ toYaml .Values.cronjob.tolerations | indent 12 }}
          {{- end }} 
          restartPolicy: Never
          containers:
          - name: {{ include "app.name" . }}
            image: {{ .Values.image.repo }}:{{ .Values.image.tag | default .Chart.AppVersion }}
            imagePullPolicy: {{ .Values.image.pullPolicy | default "Always" }}
            {{ if eq .Values.config.cronjob.timeout true }}
            command: ["timeout", "1200", "yarn", "start"]
            {{ end }} 
            args:
            - -c
            - /app/config/main.yaml
            ports:
            - name: metrics
              containerPort: {{ .Values.config.port }}       
            livenessProbe:
              httpGet:
                path: /healthcheck
                port: {{ .Values.config.port }}
              initialDelaySeconds: 10
              timeoutSeconds: 200
            {{ if ne .Values.environment "ci" }}
            resources:
              {{- toYaml .Values.resources | nindent 14 }}
            {{ end }}
            volumeMounts:
            - name: config
              mountPath: /app/config 
            - name: service-account
              mountPath: {{ dir .Values.config.bucketUpload.gcpServiceAccount }}
              readOnly: true
            {{ if ne .Values.environment "ci" }}    
            - name: data-csv
              mountPath: {{ .Values.config.exportDir }}
            {{ end }}  
          volumes:
          - name: config
            configMap:
              name: {{ include "app.name" . }}
          - name: service-account
            secret:
              secretName: {{ include "app.name" . }}
              items:
              - key: service_account_json
                path: {{ base .Values.config.bucketUpload.gcpServiceAccount }}
          {{ if ne .Values.environment "ci" }}       
          - name: data-csv
            persistentVolumeClaim:
              claimName: {{ include "app.name" . }}-data-csv
          {{ end }}

---

{{ if ne .Values.environment "ci" }}  
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: {{ include "app.name" . }}-data-csv
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 256Mi
{{ end }}      


{{ end }}          
